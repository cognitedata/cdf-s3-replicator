name: Release replicator

on:
  push:
    branches:
      - main

jobs:
  builds:
    uses: ./.github/workflows/build.yml
    secrets: inherit

  integration-tests:
    uses: ./.github/workflows/integration_tests.yml
    secrets: inherit

  publish-docker:
    runs-on: ubuntu-latest
    needs:
      - builds
      - integration-tests
    if: ${{ needs.builds.outputs.should-release == 0 }}
    environment: CD

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image
          path: ./

      - name: Load image
        run: docker load -i cdf-s3-replicator-${{ needs.builds.outputs.release-version }}-docker.tar

      - name: Login to docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Docker push to hub
        run: |
          docker tag cognite/cdf-s3-replicator:${{ needs.builds.outputs.release-version }} cognite/cdf-s3-replicator:latest
          docker push cognite/cdf-s3-replicator:${{ needs.builds.outputs.release-version }}
          docker push cognite/cdf-s3-replicator:latest

  publish-binaries:
    runs-on: ubuntu-latest
    needs:
      - builds
      - integration-tests
    environment: CD
    if: ${{ needs.builds.outputs.should-release == 0}}
    steps:
      - uses: actions/checkout@v4

      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-binary
          path: ./

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            cdf-s3-replicator-${{ needs.builds.outputs.release-version }}-linux.tar.gz
          tag_name: v${{ needs.builds.outputs.release-version }}
          name: CDF S3 Data Modeling Replicator v${{ needs.builds.outputs.release-version }}
          draft: false
          prerelease: false
          body: |
            ## CDF S3 Data Modeling Replicator v${{ needs.builds.outputs.release-version }}

            Stream CDF Data Modeling instances to AWS S3 in Delta Lake format.

            ### What's Changed
            See [CHANGELOG.md](https://github.com/cognitedata/cdf-s3-replicator/blob/main/CHANGELOG.md) for details.

            ### Installation
            - **Docker**: `docker pull cognite/cdf-s3-replicator:${{ needs.builds.outputs.release-version }}`
            - **Linux binary**: Download the tarball below

            ### Documentation
            - [README](https://github.com/cognitedata/cdf-s3-replicator#readme)
