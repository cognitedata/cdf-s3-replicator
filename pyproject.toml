[project]
name = "cdf_s3_replicator"
version = "1.0.0"
description = "Stream CDF Data Modeling instances to AWS S3 in Delta Lake format"
authors = [
    { name = "Murad Saeter", email = "murad.sater@cognite.com" },
    { name = "Marwan Elsharkawi", email = "marwan.elsharkawi@cognite.com" }
]
readme = "README.md"
requires-python = ">=3.10,<3.13"
dependencies = [
    "cognite-sdk>=7.26.0,<8.0.0",
    "cognite-extractor-utils>=7.0.0,<8.0.0",
    "azure-identity>=1.16.1,<2.0.0",
    "azure-storage-file-datalake>=12.14.0,<13.0.0",
    "deltalake>=0.16.0,<1.0.0",
    "pandas>=2.2.1,<3.0.0",
    "pywin32>=308; sys_platform == 'win32'",
    "boto3>=1.38.28",
    "pyarrow>=20.0.0",
    "prometheus-client>=0.21.1,<1.0.0",
    "tenacity>=9.0.0,<9.1.2",
]

[project.scripts]
cdf-s3-replicator = "cdf_s3_replicator.__main__:main"

[project.optional-dependencies]
dev = [
    "coverage[toml]>=7.4.4,<8.0.0",
    "pytest>=7.2.0",
    "pytest-mock>=3.6.1,<4.0.0",
    "pre-commit>=4.0.1",
    "mypy>=1.14.1",
    "pyinstaller>=6.11.1",
    "types-PyYAML",
    "types-requests",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = [
    "coverage[toml]>=7.4.4,<8.0.0",
    "pytest>=7.2.0",
    "pytest-mock>=3.6.1,<4.0.0",
    "pre-commit>=4.0.1",
    "mypy>=1.14.1",
    "pyinstaller>=6.11.1",
    "types-PyYAML",
    "types-requests",
]

[tool.black]
line-length = 120
target-version = ["py310"]
include = '\.py$'

[tool.isort]
line_length = 120
multi_line_output = 3
include_trailing_comma = true
skip_glob = '^((?!py$).)*$'
known_third_party = ["azure", "cognite", "prometheus_client"]

[tool.mypy]
python_version = "3.10"
files = ["cdf_s3_replicator"]
ignore_missing_imports = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
no_implicit_optional = false
warn_return_any = false
warn_unused_ignores = true
pretty = true

[tool.coverage.run]
omit = [".*", "*/tests/*"]

[tool.coverage.report]
fail_under = 60

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "warning"
